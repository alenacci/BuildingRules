function linearDecrease(temp) {
		temp--;
		return temp;
}

function linearIncrease(temp) {
		temp++;
		return temp;
}

// Get current date
var date = new Date();

// Create the mainCanvas
var mainCanvas = document.createElement("canvas");
var managerCanvas = document.createElement("canvas");
var ctx = mainCanvas.getContext("2d");
var managerCtx = managerCanvas.getContext("2d");
var webDiv = document.createElement("div");
var dataDiv = document.createElement("div");

webDiv.style.visibility = "hidden";
webDiv.style.align = "right";
webDiv.innerHTML = "<iframe style='height: 800px; width: 600px;' src='http://www.w3schools.com'>Not supported</iframe>";

dataDiv.style.float = "right";

mainCanvas.width = 600;
mainCanvas.height = 800;

managerCanvas.width = 300;
managerCanvas.height = 400;

document.body.appendChild(mainCanvas);
document.body.appendChild(managerCanvas);
document.body.appendChild(webDiv);
document.body.appendChild(dataDiv);

managerCtx.fillStyle = "rgb(0,0,0)";
managerCtx.font = "24px Helvetica";
managerCtx.textAlign = "left";
managerCtx.textBaseline = "top";
managerCtx.fillText("Building Manager",32,32);

// Background image
var bgReady = false;
var bgImage = new Image();
bgImage.onload = function () {
	bgReady = true;
};
bgImage.src = "images/background.png";

// Hero image
var heroReady = false;
var heroImage = new Image();
heroImage.onload = function () {
	heroReady = true;
};
heroImage.src = "images/omino.png";

var sadHeroReady = false;
var sadHeroImage = new Image();
sadHeroImage.onload = function () {
	sadHeroReady = true;
};
sadHeroImage.src = "images/ominoTriste.png";

var managerReady = false;
var managerImage = new Image();
managerImage.onload = function () {
	managerReady = true;
};
managerImage.src = "images/omino.png";

var windowReady = false;
var windowImage = new Image();
windowImage.onload = function () {
	windowReady = true;
};
windowImage.src = "images/window.png";

var hvacReady = false;
var hvacImage = new Image();
hvacImage.onload = function () {
	hvacReady = true;
};
hvacImage.src = "images/hvac.png";

var coffeeReady = false;
var coffeeImage = new Image();
coffeeImage.onload = function () {
	coffeeReady = true;
};
coffeeImage.src = "images/coffee.png";

var deskReady = false;
var deskImage = new Image();
deskImage.onload = function () {
	deskReady = true;
};
deskImage.src = "images/desk.png";

var lightSwitchReady = false;
var lightSwitchImage = new Image();
lightSwitchImage.onload = function () {
	lightSwitchReady = true;
};
lightSwitchImage.src = "images/lightSwitch.png";

// Game objects
var hero = {
	speed: 256 // movement in pixels per second
};

var window = {};
var desk = {};
var hvac = {};
var coffee = {};
var lightSwitch = {};
var manager = {};
// Handle keyboard controls
var keysDown = {};



var time = date.getHours() + ":" + date.getMinutes();

var extTemp = 15;
var roomTemp = 21;
var energyConsumption = 100;
var hvacOn = false;	

addEventListener("keydown", function (e) {
	keysDown[e.keyCode] = true;
}, false);

addEventListener("keyup", function (e) {
	delete keysDown[e.keyCode];
}, false);

// Reset the game when the player catches a monster
var reset = function () {
	hero.x = mainCanvas.width / 2;
	hero.y = mainCanvas.height / 2;
	
	window.x = 170;
	window.y = 0;
	
	manager.x = managerCanvas.width / 3;
	manager.y = managerCanvas.width / 3;
	
	hvac.x = 0;
	hvac.y = mainCanvas.height / 2 - 110;
	
	desk.x = mainCanvas.width - 100;
	desk.y = mainCanvas.height / 2 - 180;
	
	coffee.x = 0;
	coffee.y = mainCanvas.height - 120;
	
	lightSwitch.x = mainCanvas.width - 140;
	lightSwitch.y = mainCanvas.height - 160;

};

var count = 0;
// Update game objects
var update = function (modifier,mainCanvas) {
	if (38 in keysDown) { // Player holding up
		hero.y -= hero.speed * modifier;
	}
	if (40 in keysDown) { // Player holding down
		hero.y += hero.speed * modifier;
	}
	if (37 in keysDown) { // Player holding left
		hero.x -= hero.speed * modifier;
	}
	if (39 in keysDown) { // Player holding right
		hero.x += hero.speed * modifier;
	}

	// Are they touching?
	if ( (hero.x <= (window.x + 100)&& window.x <= (hero.x + 100)&& hero.y <= (window.y + 32)&& window.y <= (hero.y + 32) ) && 13 in keysDown ) {
		webDiv.firstChild.src = "http://10.0.2.15:5004/buildings/CSE/rooms/2107/rules/add";
		webDiv.style.visibility = "";
	}
	
	if ( (hero.x <= (coffee.x + 100)&& coffee.x <= (hero.x + 100)&& hero.y <= (coffee.y + 100)&& coffee.y <= (hero.y + 100) ) && 13 in keysDown ) {
		webDiv.firstChild.src = "http://www.ciao.it";
		webDiv.style.visibility = "";
	}
	
	if ( (hero.x <= (hvac.x + 50)&& hvac.x <= (hero.x + 50)&& hero.y <= (hvac.y + 100)&& hvac.y <= (hero.y + 100) ) && 13 in keysDown ) {
		webDiv.firstChild.src = "http://www.ciao.it";
		webDiv.style.visibility = "";
		if (hvacOn == false) 
			hvacOn = true;
		else
			hvacOn = false;
	}
	
	if ( (hero.x <= (desk.x + 120)&& desk.x <= (hero.x + 120)&& hero.y <= (desk.y + 250)&& desk.y <= (hero.y + 250) ) && 13 in keysDown ) {
		webDiv.firstChild.src = "http://www.ciao.it";
		webDiv.style.visibility = "";
	}
	
	if ( (hero.x <= (lightSwitch.x + 150)&& lightSwitch.x <= (hero.x + 150)&& hero.y <= (lightSwitch.y + 100)&& lightSwitch.y <= (hero.y + 100) ) && 13 in keysDown ) {
		webDiv.firstChild.src = "http://www.ciao.it";
		webDiv.style.visibility = "";
	}
	//recompute date and time
	date = new Date();
	time = date.getHours() + ":" + date.getMinutes(); 
	if (hvacOn == true)
		count++;
	//decrease temp
	if (count >= 1000) {
		roomTemp = linearDecrease(roomTemp);
		count = 0;
	}
	dataDiv.innerHTML = "<ul><h2>Room Temperature: "+ roomTemp +" </h2><h2>External Temperature: "+ extTemp +" </h2><h2>Time: "+ time +" </h2><h2>Energy Consumption: " + energyConsumption + "</ul>";
};

// Draw everything
var render = function () {
	
	mainCanvas.style.border = "black 1px solid";
	managerCanvas.style.border = "black 1px solid";
	
	if (bgReady) {
		ctx.drawImage(bgImage, 0, 0);
	}

	if (windowReady) {
		ctx.drawImage(windowImage, window.x, window.y,220,80);
	}
	
	if (coffeeReady) {
		ctx.drawImage(coffeeImage, coffee.x, coffee.y,120,120);
	}
	
	if (hvacReady) {
		ctx.drawImage(hvacImage, hvac.x, hvac.y,80,220);
	}
	
	if (lightSwitchReady) {
		ctx.drawImage(lightSwitchImage, lightSwitch.x, lightSwitch.y,140,160);
	}
	
	if (deskReady) {
		ctx.drawImage(deskImage, desk.x, desk.y,100,280);
	}
	
	if (heroReady && roomTemp >= 20) {
		ctx.drawImage(heroImage, hero.x, hero.y,100,200);
	}
	
	if (sadHeroReady && roomTemp < 20) {
		ctx.drawImage(sadHeroImage, hero.x, hero.y,100,200);
	}
	
	if (managerReady) {
		managerCtx.drawImage(heroImage, manager.x, manager.y,120,240);
	}
};

// The main game loop
var main = function () {
	var now = Date.now();
	var delta = now - then;

	update(delta / 1000,mainCanvas);
	render();

	then = now;

	// Request to do this again ASAP
	requestAnimationFrame(main);
};

// Cross-browser support for requestAnimationFrame
var w = window;
requestAnimationFrame = w.requestAnimationFrame || w.webkitRequestAnimationFrame || w.msRequestAnimationFrame || w.mozRequestAnimationFrame;

// Let's play this game!
var then = Date.now();
reset();
main();
